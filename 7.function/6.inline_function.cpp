/*
6.inline_function
*/
#include <iostream>

using namespace std;

// 인라인 함수는 함수처럼 작동하지 않는다(??)
inline int min(int a, int b) { return (a < b) ? a : b; }

int max(int a, int b) { return (a > b) ? a : b; }

int main() {
    int a = 5, b = 10;
    cout << "Min: " << min(a, b) << endl;
    // 인라인 함수는 밑의 코드처럼 컴파일이 된다.
    // 즉 함수가 호출될 일도 없고 로컬변수가 선언되고 삭제될 일이 생략된다.
    // 빠르다.
    cout << "Min: " << (5 > 6 ? 6 : 5) << endl;
    cout << "Max: " << max(a, b) << endl;

    // 그러나 인라인 함수는 컴파일러가 인라인으로 처리할 수 없는 경우도 있다.
    // 예를 들어, 인라인 함수가 재귀적으로 호출되거나, 인라인 함수가 다른 파일에 정의되어 있는 경우
    // 인라인 함수가 너무 복잡한 경우(??) 등이다.
    // 이 경우에는 인라인 함수가 아닌 일반 함수로 처리된다.
    // 즉, 인라인 선언이 반드시 인라인으로 처리되는 것은 아니다.
    // 최근의 컴파일러는 인라인이 없어도 최적화를 해주는 경지에 이르렀다.

    // 최근에는 인라인 함수를 사용하지 않는 경우가 잦다.
    return 0;
}